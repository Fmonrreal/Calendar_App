{"version":3,"sources":["types/types.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","hooks/useForm.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calender-message-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PublicRoute.js","router/PrivateRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","uiOpenModal","uiCloseModal","eventSetActive","eventLogout","eventStartAddNew","eventAddNew","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","authChekingFinish","authStartLogin","authLogin","authStartRegister","authStartStartTokenRenew","authLogout","initialState","events","activeEvent","modalOpen","intialState","checking","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","authCheckingFinish","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","event","checkingFinish","login","user","startLogout","dispatch","clear","logout","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","evento","_id","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setlastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","view","onSelectSlot","selectable","components","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4e5041a1.chunk.js","sourcesContent":["export const types = {\r\n\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n    eventSetActive: '[event] Set Active',\r\n    eventLogout:'[event] Logout event',\r\n\r\n    eventStartAddNew: '[event] Start add new',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Events loaded',\r\n\r\n    // authCheking: '[auth] Cheking login state',\r\n    authChekingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start Register',\r\n    authStartStartTokenRenew: '[auth] Start token new',\r\n    authLogout: '[auth] Logout',\r\n\r\n}","import moment from \"moment\";\r\nimport { types } from \"../types/types\";\r\n\r\n// {\r\n//     id: new Date().getTime(),\r\n//     title: 'Cumpleaños del jefe',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2,'hours').toDate(),\r\n//     bgcolor: '#fafafa',\r\n//     notes: 'Comprar el pastel',\r\n//     user: {\r\n//         _id: '123',\r\n//         name: 'Fernando'\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n};\r\n\r\nexport const calendarReducer = (state = initialState,action) => {\r\n\r\n    switch(action.type){\r\n\r\n        case types.eventSetActive:\r\n            return{\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n\r\n        case types.eventAddNew:\r\n            return{\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n\r\n        case types.eventClearActiveEvent:\r\n            return{\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n        \r\n        case types.eventUpdated:\r\n            return{\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => (e.id === action.payload.id) ? action.payload : e\r\n                )\r\n            }\r\n\r\n        case types.eventDeleted:\r\n            return{\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => (e.id !== state.activeEvent.id)\r\n                ),\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventLoaded:\r\n            return{\r\n                ...state,\r\n                events:[...action.payload]\r\n            }\r\n\r\n        case types.eventLoaded:\r\n            return{\r\n                ...state,\r\n                events: [...action.payload]\r\n            }\r\n\r\n        case types.eventLogout:\r\n            return{\r\n                ...initialState\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\n","import {types} from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n}\r\n\r\nexport const uiReducer = (state = initialState,action) => {\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n                return {\r\n                    ...state,\r\n                    modalOpen: true\r\n                }\r\n        case types.uiCloseModal:\r\n                return {\r\n                    ...state,\r\n                    modalOpen: false\r\n                }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst intialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null\r\n}\r\n\r\nexport const authReducer = (state = intialState,action) => {\r\n\r\n    switch(action.type){\r\n\r\n        case types.authLogin:\r\n            return{\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            }\r\n\r\n        case types.authCheckingFinish:\r\n            return{\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n        case types.authLogout:\r\n            return{\r\n                checking: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import {combineReducers} from 'redux';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { uiReducer } from './uiReducer';\r\nimport { authReducer } from './authReducer';\r\n\r\nexport const rootReducer =  combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n    //TODO: CalendarReducer\r\n})\r\n\r\n","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\nimport thunk from 'redux-thunk';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n\r\n\r\n\r\nconst fetchSinToken = (endpoint,data,method = 'GET') => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`;\r\n\r\n    if(method === 'GET'){\r\n        return fetch(url);\r\n    }else{\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                'Content-type':'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n\r\n}\r\n\r\nconst fetchConToken = (endpoint,data,method = 'GET') => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if(method === 'GET'){\r\n        return fetch(url,{\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    }else{\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","import moment from 'moment'\r\n\r\n\r\nexport const prepareEvents = ( events = [] ) => {\r\n\r\n    return events.map(\r\n        (e) => ({\r\n            ...e,\r\n            end: moment(e.end).toDate(),\r\n            start: moment(e.start).toDate(),\r\n        })\r\n    );\r\n    \r\n}\r\n","import Swal from \"sweetalert2\";\r\n\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport {types} from \"../types/types\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\n\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async(dispatch, getState) => {\r\n\r\n        const {uid,name} = getState().auth;\r\n\r\n        try {\r\n            const resp =  await fetchConToken('events',event,'POST');\r\n            const body = await resp.json();\r\n\r\n            if(body.ok){\r\n                event.id =body.evento.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n\r\n                console.log(event);\r\n                dispatch(eventAddNew(event));\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        \r\n\r\n    }\r\n}\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n})\r\n\r\nexport const eventClearActiveEvent = () => ({type: types.eventClearActiveEvent});\r\n\r\nexport const eventStartUpdated = (event) => {\r\n    return async(dispatch) => {\r\n\r\n        try {\r\n           console.log(event)\r\n            const resp = fetchConToken(`events/${event.id}`,event,'PUT');\r\n            const body = await (await resp).json();\r\n\r\n            if(body.ok){\r\n                dispatch(eventUpdated(event));\r\n            }else{\r\n                Swal.fire('Error',body.msg,'error')\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventUpdated = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\nexport const eventStartDelete = () => {\r\n    return async (dispatch,getState) => {\r\n\r\n        const {id} = getState().calendar.activeEvent;\r\n\r\n        console.log(id)\r\n\r\n        try {\r\n             const resp = fetchConToken(`events/${id}`,{},'DELETE');\r\n             const body = await (await resp).json();\r\n \r\n             if(body.ok){\r\n                 dispatch(eventDeleted());\r\n             }else{\r\n                 Swal.fire('Error',body.msg,'error')\r\n             }\r\n \r\n         } catch (error) {\r\n             console.log(error)\r\n         }\r\n\r\n    }\r\n}\r\n\r\nconst eventDeleted = () => ({type: types.eventDeleted});\r\n\r\nexport const eveentStartLoading = () => {\r\n    return async(dispatch) => {\r\n\r\n        try{\r\n            \r\n            const resp = await fetchConToken('events');\r\n            const body = await resp.json();\r\n\r\n            const events = prepareEvents(body.eventos);\r\n            // console.log(events)\r\n            dispatch(eventLoaded(events))\r\n\r\n        }catch(error){\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})\r\n\r\nexport const eventLogout = () => ({\r\n    type: types.eventLogout\r\n});\r\n    ","import Swal from \"sweetalert2\";\r\nimport { fetchSinToken,fetchConToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./events\";\r\n\r\n\r\nexport const startLogin = (email,password) => {\r\n    return async(dispatch) => {\r\n\r\n        const resp = await fetchSinToken('auth',{email,password},'POST');\r\n        const body = await resp.json();\r\n\r\n        \r\n        \r\n        if(body.ok){\r\n            localStorage.setItem('token',body.token);\r\n            localStorage.setItem('token-init-date',new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        }else{\r\n            Swal.fire('Error',body.msg,'error');\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const startRegister = (email,password,name) => {\r\n    return async( dispatch) => {\r\n\r\n        const resp = await fetchSinToken('auth/new',{email,password,name},'POST');\r\n        const body = await resp.json();\r\n        \r\n        if(body.ok){\r\n            localStorage.setItem('token',body.token);\r\n            localStorage.setItem('token-init-date',new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        }else{\r\n            Swal.fire('Error',body.msg,'error');\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async(dispatch) => {\r\n\r\n        const resp = await fetchConToken('auth/renew');\r\n        const body = await resp.json();\r\n    \r\n\r\n        if(body.ok){\r\n            localStorage.setItem('token',body.token);\r\n            localStorage.setItem('token-init-date',new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        }else{\r\n            Swal.fire('Error',body.msg,'error');\r\n            dispatch(checkingFinish);\r\n        }\r\n        \r\n    }\r\n\r\n}\r\n\r\nconst checkingFinish = () => ({type: types.authCheckingFinish});\r\n\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n\r\n        localStorage.clear();\r\n        dispatch(eventLogout());\r\n        dispatch( logout());\r\n\r\n    }\r\n}\r\n\r\nconst logout = () => ({type: types.authLogout})","import React from 'react';\r\nimport './login.css';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startLogin,startRegister } from '../../actions/auth';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const [ formLoginValues, handleLoginInputChange, reset ] = useForm({\r\n        lEmail: 'email3@email.com',\r\n        lPassword: '123456'\r\n    });\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        rName: 'Nando',\r\n        rEmail: 'nando@email.com',\r\n        rPassword1: '123456',\r\n        rPassword2: '123456'\r\n    });\r\n\r\n    const{lEmail,lPassword} = formLoginValues;\r\n    const{rName,rEmail,rPassword1,rPassword2} = formRegisterValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        // console.log(formLoginValues);\r\n        dispatch(startLogin(lEmail,lPassword));\r\n    }\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n    \r\n        if(rPassword1 !== rPassword2){\r\n            return Swal.fire('Error','Las contraseñas deben de ser iguales','error')\r\n        }\r\n\r\n        dispatch(startRegister(rEmail,rPassword1,rName));\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={lEmail}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={lPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={rName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"rPassword1\"\r\n                                value={rPassword1}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name=\"rPassword2\"\r\n                                value={rPassword2}\r\n                                onChange={handleRegisterInputChange} \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useSelector,useDispatch } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const {name} = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span>\r\n            <button \r\n                className=\"btn btn-outline-danger\"\r\n                onClick={handleLogout}\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n\r\n    const {title,user} = event;\r\n\r\n    return (\r\n        <div>\r\n            <span>{title}</span>\r\n            <strong>-{user.name}</strong>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal\r\n})\r\n\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal\r\n})","import React,{useState,useEffect} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport moment from 'moment';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Swal from 'sweetalert2';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdated } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content: {\r\n      top: '50%',\r\n      left: '50%',\r\n      right: 'auto',\r\n      bottom: 'auto',\r\n      marginRight: '-50%',\r\n      transform: 'translate(-50%, -50%)',\r\n    },\r\n  };\r\n  Modal.setAppElement('#root');  \r\n  \r\nconst now = moment().minutes(0).seconds(0).add(1,'hours');\r\nconst nowPlus1 = now.clone().add(1,'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const {modalOpen} = useSelector( state => state.ui );\r\n    const {activeEvent} = useSelector( state => state.calendar );\r\n    const dispatch = useDispatch();\r\n\r\n    const [dateStart, setDateStart] = useState(now.toDate());\r\n    const [dateEnd, setDateEnd] = useState(nowPlus1.toDate());\r\n    const [titleValid, setTitleValid] = useState(true)\r\n\r\n    const [formValues,setFormValues] = useState(initEvent);\r\n\r\n    const {notes,title,start,end} = formValues;\r\n\r\n    useEffect(() => {\r\n\r\n        if(activeEvent){\r\n            setFormValues(activeEvent);\r\n        }else{\r\n            setFormValues(initEvent);\r\n        }\r\n        \r\n        // console.log(activeEvent)\r\n\r\n    }, [activeEvent,setFormValues])\r\n\r\n    const handleInputChange = ({target}) => {\r\n\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    // const [isOpen, setisOpen] = useState(true)\r\n\r\n    const closeModal = () => {\r\n        //Todo: cerrar el modal\r\n        dispatch(uiCloseModal());\r\n        dispatch(eventClearActiveEvent());\r\n        setFormValues(initEvent);\r\n        // setisOpen(false);\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setDateStart(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        }) \r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n\r\n        if(momentStart.isSameOrAfter(momentEnd)){\r\n            return Swal.fire('Error','La fecha fin debe de ser mayor a la fecha de inicio','error');\r\n        }\r\n\r\n        if(title.trim().length < 2){\r\n            return setTitleValid(false);\r\n        }\r\n\r\n        //Todo: realizar grabacion\r\n        if(activeEvent){\r\n            dispatch(eventStartUpdated(formValues))\r\n        }else{\r\n            dispatch(eventStartAddNew(formValues));\r\n        }\r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n\r\n    }   \r\n\r\n    return (\r\n        <Modal\r\n            isOpen={modalOpen}\r\n            // onAfterOpen={afterOpenModal}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            closeTimeoutMS={200}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n            // contentLabel=\"Example Modal\"\r\n        >\r\n            <h1>{ (activeEvent) ? 'Editar evento' : 'Nuevo evento'}</h1>\r\n            <hr />\r\n            <form \r\n                className=\"container\"\r\n                onSubmit={handleSubmitForm}\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={handleStartDateChange}\r\n                        value={dateStart}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={handleEndDateChange}\r\n                        value={dateEnd}\r\n                        minDate={dateStart}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={`form-control ${ !titleValid && 'is-invalid'}`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickNew = () => {\r\n        dispatch(uiOpenModal())\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={handleClickNew}\r\n        >\r\n          <i className=\"fas fa-plus\"></i>  \r\n        </button>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch(eventStartDelete());\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={handleDelete}\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span>Borrar evento</span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport {Calendar,momentLocalizer} from 'react-big-calendar';\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport moment from 'moment';\r\n\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { messages } from '../../helpers/calender-message-es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport 'moment/locale/es';\r\nimport { eveentStartLoading, eventClearActiveEvent, eventSetActive } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\n// const events = [{\r\n//     title: 'Cumpleaños del jefe',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2,'hours').toDate(),\r\n//     bgcolor: '#fafafa',\r\n//     notes: 'Comprar el pastel',\r\n//     user: {\r\n//         _id: '123',\r\n//         name: 'Fernando'\r\n//     }\r\n// }]\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {events,activeEvent} = useSelector( state => state.calendar );\r\n    const {uid} = useSelector( state => state.auth );\r\n\r\n\r\n    const [lastView, setlastView] = useState( localStorage.getItem('lastView') || 'month');\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(eveentStartLoading());\r\n\r\n    }, [dispatch])\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch(eventSetActive(e));\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setlastView(e);\r\n        localStorage.setItem('lastView',e);\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        // console.log(e)\r\n        dispatch(eventClearActiveEvent());\r\n    }\r\n\r\n    const eventStyleGetter = (event,start,end,isSelected) => {\r\n\r\n        // console.log(event,start,end,isSelected);\r\n        const style = {\r\n            backgroundColor: (uid === event.user._id) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n\r\n        return {\r\n            style\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar/>\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={ events }\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={onViewChange}\r\n                view={lastView}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n                // style={{ height: 500 }}\r\n            />\r\n\r\n            <AddNewFab/>\r\n\r\n            {\r\n                (activeEvent) && <DeleteEventFab/>\r\n            }\r\n\r\n            <CalendarModal/>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    \n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n    // Navigate\r\n} from \"react-router-dom\";\r\n\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { useDispatch,useSelector } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { startChecking } from '../actions/auth';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {checking,uid} = useSelector( state => state.auth );\r\n\r\n    useEffect(() => {\r\n    \r\n        dispatch(startChecking());\r\n\r\n    }, [dispatch])\r\n\r\n    if(checking){\r\n        // return(<h5>Espere...</h5>);\r\n    }\r\n\r\n    return (\r\n            <Router>\r\n                    <Switch>\r\n                        <PublicRoute \r\n                            exact \r\n                            path='/login' \r\n                            component={LoginScreen}\r\n                            isAuthenticated={!!uid}\r\n                        />\r\n                        <PrivateRoute \r\n                            exact \r\n                            path='/' \r\n                            component={CalendarScreen}\r\n                            isAuthenticated={!!uid}\r\n                            />\r\n                        <Redirect to='/'/>\r\n                    </Switch>\r\n            </Router>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './router/AppRouter';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter/>\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}